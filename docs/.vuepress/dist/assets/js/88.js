(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[88],{

/***/ "./docs/guide/validation.md":
/*!**********************************!*\
  !*** ./docs/guide/validation.md ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validation.md?vue&type=template&id=4575657b& */ \"./docs/guide/validation.md?vue&type=template&id=4575657b&\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\nvar script = {}\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  script,\n  _validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (true) {\n  var api = __webpack_require__(/*! ./node_modules/vue-hot-reload-api/dist/index.js */ \"./node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(__webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm.js\"))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4575657b')) {\n      api.createRecord('4575657b', component.options)\n    } else {\n      api.reload('4575657b', component.options)\n    }\n    module.hot.accept(/*! ./validation.md?vue&type=template&id=4575657b& */ \"./docs/guide/validation.md?vue&type=template&id=4575657b&\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validation.md?vue&type=template&id=4575657b& */ \"./docs/guide/validation.md?vue&type=template&id=4575657b&\");\n(function () {\n      api.rerender('4575657b', {\n        render: _validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n        staticRenderFns: _validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]\n      })\n    })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n  }\n}\ncomponent.options.__file = \"docs/guide/validation.md\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2d1aWRlL3ZhbGlkYXRpb24ubWQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzL2d1aWRlL3ZhbGlkYXRpb24ubWQ/NzQyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL3ZhbGlkYXRpb24ubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDU3NTY1N2ImXCJcbnZhciBzY3JpcHQgPSB7fVxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL2p1c3RpbnNjaHJvZWRlci9Qcm9qZWN0cy92dWVmb3JtdWxhdGUuY29tL25vZGVfbW9kdWxlcy92dWUtaG90LXJlbG9hZC1hcGkvZGlzdC9pbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzQ1NzU2NTdiJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzQ1NzU2NTdiJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzQ1NzU2NTdiJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi92YWxpZGF0aW9uLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ1NzU2NTdiJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzQ1NzU2NTdiJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJkb2NzL2d1aWRlL3ZhbGlkYXRpb24ubWRcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./docs/guide/validation.md\n");

/***/ }),

/***/ "./docs/guide/validation.md?vue&type=template&id=4575657b&":
/*!*****************************************************************!*\
  !*** ./docs/guide/validation.md?vue&type=template&id=4575657b& ***!
  \*****************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_74ce7a4e_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"74ce7a4e-vue-loader-template\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib??ref--1-1!../../node_modules/@vuepress/markdown-loader??ref--1-2!./validation.md?vue&type=template&id=4575657b& */ \"./node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"74ce7a4e-vue-loader-template\\\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./docs/guide/validation.md?vue&type=template&id=4575657b&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_74ce7a4e_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_74ce7a4e_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_validation_md_vue_type_template_id_4575657b___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2d1aWRlL3ZhbGlkYXRpb24ubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDU3NTY1N2ImLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZG9jcy9ndWlkZS92YWxpZGF0aW9uLm1kPzM4ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz97XFxcImNhY2hlRGlyZWN0b3J5XFxcIjpcXFwibm9kZV9tb2R1bGVzL0B2dWVwcmVzcy9jb3JlL25vZGVfbW9kdWxlcy8uY2FjaGUvdnVlcHJlc3NcXFwiLFxcXCJjYWNoZUlkZW50aWZpZXJcXFwiOlxcXCI3NGNlN2E0ZS12dWUtbG9hZGVyLXRlbXBsYXRlXFxcIn0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEtMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMS0xIS4uLy4uL25vZGVfbW9kdWxlcy9AdnVlcHJlc3MvbWFya2Rvd24tbG9hZGVyL2luZGV4LmpzPz9yZWYtLTEtMiEuL3ZhbGlkYXRpb24ubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDU3NTY1N2ImXCIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./docs/guide/validation.md?vue&type=template&id=4575657b&\n");

/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"74ce7a4e-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./docs/guide/validation.md?vue&type=template&id=4575657b&":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"74ce7a4e-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??ref--1-1!./node_modules/@vuepress/markdown-loader??ref--1-2!./docs/guide/validation.md?vue&type=template&id=4575657b& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h1\", { attrs: { id: \"validation\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#validation\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Validation\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Front-end validation is incredibly important to provide a good user experience,\\nbut it’s often skipped due to the pain involved in configuring it.\\nVue Formulate reduces the friction of front-end validation to the point where it's\\nso simple to set up that there's really no good excuse not to.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"What ice cream flavor?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"help\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Note: We're fresh out of strawberries and bananas.\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"flavor\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"required|not:strawberry,banana\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-1-validation\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"Note\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"By default, validation error messages are not shown until the user’s focus\\nleaves (technically a \"\n          ),\n          _c(\"code\", [_vm._v(\"blur\")]),\n          _vm._v(\n            \" event) the current field. You can change this\\nbehavior by setting the \"\n          ),\n          _c(\"code\", [_vm._v(\"error-behavior\")]),\n          _vm._v(\" prop to \"),\n          _c(\"code\", [_vm._v(\"live\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"syntax\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#syntax\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Syntax\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Declaring what validation rules apply to your field is as easy as adding a\\n\"\n        ),\n        _c(\"code\", [_vm._v(\"validation\")]),\n        _vm._v(\" prop to your \"),\n        _c(\"code\", [_vm._v(\"FormulateInput\")]),\n        _vm._v(\" field. Rules can either be a series\\nof pipe (\"),\n        _c(\"code\", [_vm._v(\"|\")]),\n        _vm._v(\") separated strings \"),\n        _c(\"code\", [_vm._v(\"required|max:10|min:5\")]),\n        _vm._v(\" or arrays:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"[\\n    ['required'],\\n    ['max', 10],\\n    ['min', 5]\\n  ]\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"available-rules\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#available-rules\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Available rules\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Vue Formulate ships with a library of frequently used validation rules. If\\nyou don’t find one that meets your exact requirement you can always add your\\nown \"\n        ),\n        _c(\"a\", { attrs: { href: \"#custom-validation-rules\" } }, [\n          _vm._v(\"custom rule\")\n        ]),\n        _vm._v(\" to suit your needs.\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#accepted\" } }, [_vm._v(\"accepted\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#after\" } }, [_vm._v(\"after\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#alpha\" } }, [_vm._v(\"alpha\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#alphanumeric\" } }, [\n            _vm._v(\"alphanumeric\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#before\" } }, [_vm._v(\"before\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#between\" } }, [_vm._v(\"between\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#confirm\" } }, [_vm._v(\"confirm\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#date\" } }, [_vm._v(\"date\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#email\" } }, [_vm._v(\"email\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#in\" } }, [_vm._v(\"in\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#matches\" } }, [_vm._v(\"matches\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#max\" } }, [_vm._v(\"max\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#mime\" } }, [_vm._v(\"mime\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#min\" } }, [_vm._v(\"min\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#not\" } }, [_vm._v(\"not\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#number\" } }, [_vm._v(\"number\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#required\" } }, [_vm._v(\"required\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"a\", { attrs: { href: \"#url\" } }, [_vm._v(\"url\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"accepted\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#accepted\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Accepted\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"The value must be \"),\n        _c(\"code\", [_vm._v(\"yes\")]),\n        _vm._v(\", \"),\n        _c(\"code\", [_vm._v(\"on\")]),\n        _vm._v(\", \"),\n        _c(\"code\", [_vm._v(\"1\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"true\")]),\n        _vm._v(\n          \". Useful for box inputs, often where\\nyou need to validate if someone has accepted terms.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"checkbox\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"I accept the terms of service?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"terms\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"accepted\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-accepted\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"after\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#after\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" After\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if a date comes after another date. If no date argument is provided\\nthe current time will be used. The value must be a \"\n        ),\n        _c(\"code\", [_vm._v(\"Date\")]),\n        _vm._v(\" object or a string\\nthat can be evaluated by \"),\n        _c(\"code\", [_vm._v(\"Date.parse\")]),\n        _vm._v(\".\\n\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [\n            _vm._v(\"Read more about \"),\n            _c(\"code\", [_vm._v(\"Date.parse()\")]),\n            _vm._v(\" on MDN\"),\n            _c(\"OutboundLink\")\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"date\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Select a time after the new year.\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"date\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"after:01/01/2020\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-after\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"alpha\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#alpha\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Alpha\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if a value is only alphabetical characters. There are two character sets\\n\"\n        ),\n        _c(\"code\", [_vm._v(\"latin\")]),\n        _vm._v(\" and \"),\n        _c(\"code\", [_vm._v(\"default\")]),\n        _vm._v(\". Latin characters are strictly \"),\n        _c(\"code\", [_vm._v(\"[a-zA-Z]\")]),\n        _vm._v(\" while the\\n\"),\n        _c(\"code\", [_vm._v(\"default\")]),\n        _vm._v(\" set includes most accented characters as well like: \"),\n        _c(\"code\", [_vm._v(\"ä\")]),\n        _vm._v(\", \"),\n        _c(\"code\", [_vm._v(\"ù\")]),\n        _vm._v(\", or \"),\n        _c(\"code\", [_vm._v(\"ś\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter your desired username\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"username\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"alpha:latin\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-alpha\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"alphanumeric\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#alphanumeric\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Alphanumeric\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if a value is only made of alphabetical characters or numeric digits.\\nFor the alphabetical portion you can pass \"\n        ),\n        _c(\"code\", [_vm._v(\"default\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"latin\")]),\n        _vm._v(\" - see\\n\"),\n        _c(\"a\", { attrs: { href: \"#alpha\" } }, [_vm._v(\"alpha\")]),\n        _vm._v(\") above.\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter your desired username\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"username\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"alphanumeric\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-alphanumeric\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"before\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#before\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Before\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if a date comes before another date. If no date argument is provided\\nthe current time will be used. The value must be a \"\n        ),\n        _c(\"code\", [_vm._v(\"Date\")]),\n        _vm._v(\" object or a string\\nthat can be evaluated by \"),\n        _c(\"code\", [_vm._v(\"Date.parse\")]),\n        _vm._v(\".\\n\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [\n            _vm._v(\"Read more about \"),\n            _c(\"code\", [_vm._v(\"Date.parse()\")]),\n            _vm._v(\" on MDN\"),\n            _c(\"OutboundLink\")\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"date\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Select a time before the new year.\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"date\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"before:01/01/2020\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-before\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"between\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#between\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Between\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if a number or string length is between a minimum or maximum. Both the\\nmaximum and minimum are exclusive. If the value being validated is a string\\nthe string’s length is used for comparison. If a number is used, the numeric\\nvalue is used for comparison.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"Tip\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"If you’re wanting to find if a date is between two other dates consider using\\nthe \"\n          ),\n          _c(\"a\", { attrs: { href: \"#before\" } }, [_vm._v(\"before\")]),\n          _vm._v(\" and \"),\n          _c(\"a\", { attrs: { href: \"#after\" } }, [_vm._v(\"after\")]),\n          _vm._v(\" validation rules together.\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"range\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"min\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"5\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"max\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"35\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Age\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"How old are you?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"between:10,18\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"v-model\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"age\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n{{ age }}\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-between\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"confirm\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#confirm\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Confirm\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if the field value matches the value of another field. Mostly used for\\nhidden fields - like password confirmations. By default, a \"\n        ),\n        _c(\"code\", [_vm._v(\"confirm\")]),\n        _vm._v(\" rule will\\nlook for other fields in the same \"),\n        _c(\"code\", [_vm._v(\"FormulateForm\")]),\n        _vm._v(\" with the suffix \"),\n        _c(\"code\", [_vm._v(\"_confirm\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"Note\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"This rule only works inside the context of a \"),\n          _c(\"code\", [_vm._v(\"<FormulateForm>\")]),\n          _vm._v(\".\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"template\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateForm\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"@submit\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"submit\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"New password\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"password\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"password\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"required\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Confirm password\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"password\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"password_confirm\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"required|confirm\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation-name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Password confirmation\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"submit\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Change password\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"FormulateForm\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"template\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"script\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token script\" } }, [\n              _c(\n                \"span\",\n                { pre: true, attrs: { class: \"token language-javascript\" } },\n                [\n                  _vm._v(\"\\n\"),\n                  _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                    _vm._v(\"export\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                    _vm._v(\"default\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"{\")]\n                  ),\n                  _vm._v(\"\\n  methods\"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token operator\" } },\n                    [_vm._v(\":\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"{\")]\n                  ),\n                  _vm._v(\"\\n    \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token function\" } },\n                    [_vm._v(\"submit\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"(\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\")\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"{\")]\n                  ),\n                  _vm._v(\"\\n      \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token function\" } },\n                    [_vm._v(\"alert\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"(\")]\n                  ),\n                  _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                    _vm._v(\"'passed validation'\")\n                  ]),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\")\")]\n                  ),\n                  _vm._v(\"\\n    \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"}\")]\n                  ),\n                  _vm._v(\"\\n  \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"}\")]\n                  ),\n                  _vm._v(\"\\n\"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"}\")]\n                  ),\n                  _vm._v(\"\\n\")\n                ]\n              )\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"script\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-confirm\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"date\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#date\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Date\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"Checks if the input is a valid date according to \"),\n        _c(\"code\", [_vm._v(\"Date.parse()\")]),\n        _vm._v(\n          \", or if a format\\nargument is provided, it will validate according to the given format. Format\\nvariables are:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"Variable\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Valid values\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_c(\"code\", [_vm._v(\"MM\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"Two-digit month representation (01-12)\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_c(\"code\", [_vm._v(\"M\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\n                \"Single-digit month representation (1-12) leading zero allowed\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_c(\"code\", [_vm._v(\"DD\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"Two-digit day of the month (01-31)\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_c(\"code\", [_vm._v(\"D\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\n                \"Single-digit day of the month (1-31), leading zero allowed\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_c(\"code\", [_vm._v(\"YY\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"Two-digit year\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_c(\"code\", [_vm._v(\"YYYY\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"Four-digit year\")])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block warning\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"WARNING\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"Heads up! This validation rule will validate that your requested format is followed\\nbut does not validate if a date exists (eg 02/31/2008).\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"date\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter your birthday\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"date:MM/DD/YYYY\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-date\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"email\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#email\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Email\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"Checks if the input is a valid email address format.\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"email\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"email\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter your email address\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"email\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-email\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"in\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#in\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" In\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"Checks if the input is included in an array of options.\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"select\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":options\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"{chocolate: 'Chocolate', vanilla: 'Vanilla', strawberry: 'Strawberry'}\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"flavor\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Favorite ice cream flavor?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"placeholder\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Select a flavor\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"in:chocolate,vanilla\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-in\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"matches\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#matches\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Matches\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if the input matches a particular value or pattern. If you pass multiple\\narguments, it checks each until a match is found.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block warning\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"WARNING\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"When matching against a regular expression you have to use the alternative\\n\"\n          ),\n          _c(\"code\", [_vm._v(\"array\")]),\n          _vm._v(\" style validation rule syntax \"),\n          _c(\"code\", [\n            _vm._v(\":validation=\\\"[['matches', /^(apple|banana)$/]]\")\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"color\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"placeholder\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"#00ff00\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter a hexidecimal color value\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"[['matches', /^#[a-fA-F0-9]{6}$/]]\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"v-model\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"color\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"color\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Or pick one\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"v-model\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"color\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-matches\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"language\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"placeholder\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"node, php, java...\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"What is your favorite server side language?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"matches:node,php,java\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"v-model\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"color\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-matches-2\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"max\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#max\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Max\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"Checks the value of a \"),\n        _c(\"code\", [_vm._v(\"Number\")]),\n        _vm._v(\", or length of a \"),\n        _c(\"code\", [_vm._v(\"String\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"Array\")]),\n        _vm._v(\n          \" is less than\\na maximum length or value. The maximum value/length defaults to \"\n        ),\n        _c(\"code\", [_vm._v(\"10\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"You can force the validator to evaluate length or value by passing a second\\nargument of either \"\n        ),\n        _c(\"code\", [_vm._v(\"length\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"value\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"coupon\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter a coupon code\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"max:5,length\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-max\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"checkbox\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"toppings\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":options\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"{\\n    pepperoni: 'Pepperoni',\\n    sausage: 'Sausage',\\n    olives: 'Olives',\\n    feta: 'Feta',\\n    mushrooms: 'Mushrooms',\\n  }\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Select up to 3 pizza toppings\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"max:3\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"Note\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"When evaluating an \"),\n          _c(\"code\", [_vm._v(\"Array\")]),\n          _vm._v(\" the second argument (length/value) is ignored.\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"demo-validation-max-2\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"mime\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#mime\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Mime\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if the type of file selected is an allowed value. This validator uses the\\nfile’s extension to determine the \"\n        ),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"mime type\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\n          \".\\nBack-end validation of the file’s content is still strongly encouraged as front-end\\nvalidation can be bypassed by savvy users.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"file\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"image\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Please select an image\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"mime:image/jpeg,image/png\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-mime\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"Note\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"When validating a field with the \"),\n          _c(\"code\", [_vm._v(\"multiple\")]),\n          _vm._v(\n            \" attribute selected, validation will\\nfail if any of the selected files are not the proper mime.\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"min\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#min\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Min\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"Checks the value of a \"),\n        _c(\"code\", [_vm._v(\"Number\")]),\n        _vm._v(\", or length of a \"),\n        _c(\"code\", [_vm._v(\"String\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"Array\")]),\n        _vm._v(\n          \" is more than\\na maximum length or value. The minimum value/length defaults to \"\n        ),\n        _c(\"code\", [_vm._v(\"1\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"You can force the validator to evaluate length or value by passing a second\\nargument of either \"\n        ),\n        _c(\"code\", [_vm._v(\"length\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"value\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"code\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Enter your SSN\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"min:9,length\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation-name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Social security code\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-min\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"not\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#not\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Not\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks to ensure the input data does not match a set of predefined values.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"framework\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"What is your favorite javascript framework?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"not:jquery,ember,mootools\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-not\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"number\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#number\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Number\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"Checks if the input is a valid number as evaluated by \"),\n        _c(\"code\", [_vm._v(\"isNaN()\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"age\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"How old are you?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"number\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-number\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"required\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#required\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Required\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"Checks if the input is empty.\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"text\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"city\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"What city do you live in?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"required\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-required\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block warning\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"Important\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"By default, fields are not required, meaning that all validation rules will\\npass with an empty value unless they include the \"\n          ),\n          _c(\"code\", [_vm._v(\"required\")]),\n          _vm._v(\" rule.\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"url\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#url\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" Url\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Checks if the input value appears to be a properly formatted URL including\\nthe protocol. This does not check if the URL actually resolves.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"What is your website?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-validation-url\"),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"customize-validation-messages\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#customize-validation-messages\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Customize validation messages\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"There are several ways to customize your validation message. The most basic\\nof which is to use the \"\n        ),\n        _c(\"code\", [_vm._v(\"validation-name\")]),\n        _vm._v(\n          \" prop — allowing you to change the name\\nof the field as used in the pre-defined validation messages.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"If you need to be more specific you have two options:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"Override a rule’s message function on an individual \"),\n          _c(\"code\", [_vm._v(\"FormulateInput\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"Globally override a validation rule’s message function\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"custom-field-level-messages\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#custom-field-level-messages\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Custom field-level messages\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"using-strings\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#using-strings\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Using strings\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"To override a validation message on a single \"),\n        _c(\"code\", [_vm._v(\"FormulateInput\")]),\n        _vm._v(\", add the\\n\"),\n        _c(\"code\", [_vm._v(\"validation-messages\")]),\n        _vm._v(\n          \" prop with an object of rule names and a corresponding\\nmessage.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"type\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"select\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"label\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"What nationality’s food is the best?\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"name\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"food\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":options\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"{\\n    french: 'French',\\n    italian: 'Italian',\\n    german: 'German',\\n    indian: 'Indian'\\n  }\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"placeholder\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"Select a food type\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"required|in:italian,indian\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"error-behavior\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"live\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":validation-messages\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"{\\n    required: 'Please pick your favorite food',\\n    in: 'Oh, that food isn’t very good...'\\n  }\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-custom-validation-field\"),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"using-functions\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#using-functions\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Using functions\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"If you need more power for your validation rules, you can use a function instead\\nof a string. The function is passed a context object.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"validation-message-context-object\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#validation-message-context-object\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Validation message context object:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"Property\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Description\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"args\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\n                \"An array of arguments from rule definition. For example \"\n              ),\n              _c(\"code\", [_vm._v(\"['italian', 'indian']\")]),\n              _vm._v(\" in the rule definition \"),\n              _c(\"code\", [_vm._v(\"in:italian,indian\")])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"name\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\"The name of the field (cascades to \"),\n              _c(\"code\", [_vm._v(\"validation-name || name || label\")]),\n              _vm._v(\")\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"value\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"The current value of the field\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"formValues\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\"If inside the context of a \"),\n              _c(\"code\", [_vm._v(\"FormulateForm\")]),\n              _vm._v(\n                \" this object will contain the values of the other fields (by name)\"\n              )\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Let’s re-write the above example using a function instead of a string.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateForm\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"...\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":validation-messages\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"{\\n    required: 'Please pick your favorite food',\\n    in: ({ value }) => `Oh, ${value} food isn’t very good...`\\n  }\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-custom-validation-field-2\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"globally-add-edit-validation-rule-message\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#globally-add-edit-validation-rule-message\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Globally add/edit validation rule message\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"If there are validation rule messages you'd like to override across your entire\\nproject, you can define those message rules when registering Vue Formulate under\\nthe language key you'd like to override.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"import\")\n            ]),\n            _vm._v(\" Vue \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"from\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'vue'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"import\")\n            ]),\n            _vm._v(\" VueFormulate \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"from\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'@braid/vue-formulate'\")\n            ]),\n            _vm._v(\"\\n\\nVue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"use\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"VueFormulate\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  locales\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    en\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n      \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"required\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\" name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { pre: true, attrs: { class: \"token template-string\" } },\n              [\n                _c(\n                  \"span\",\n                  {\n                    pre: true,\n                    attrs: { class: \"token template-punctuation string\" }\n                  },\n                  [_vm._v(\"`\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"Please fill out the \")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token interpolation\" } },\n                  [\n                    _c(\n                      \"span\",\n                      {\n                        pre: true,\n                        attrs: {\n                          class: \"token interpolation-punctuation punctuation\"\n                        }\n                      },\n                      [_vm._v(\"${\")]\n                    ),\n                    _vm._v(\"name\"),\n                    _c(\n                      \"span\",\n                      {\n                        pre: true,\n                        attrs: {\n                          class: \"token interpolation-punctuation punctuation\"\n                        }\n                      },\n                      [_vm._v(\"}\")]\n                    )\n                  ]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\" field.\")\n                ]),\n                _c(\n                  \"span\",\n                  {\n                    pre: true,\n                    attrs: { class: \"token template-punctuation string\" }\n                  },\n                  [_vm._v(\"`\")]\n                )\n              ]\n            ),\n            _vm._v(\"\\n      \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [\n          _vm._v(\"About localization\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"Currently, Vue Formulate only supports the English language, but that’s only\\nbecause the maintainers only speak English. If you’re able to translate to another\\nlanguage, please \"\n          ),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://github.com/wearebraid/vue-formulate\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"submit a pull request\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"!\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"custom-validation-rules\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#custom-validation-rules\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Custom validation rules\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Like with validation messages, rules can be added globally or per-field. Rules\\nare just simple functions that are passed a context object and rule arguments\\nand expected to return or resolve a \"\n        ),\n        _c(\"code\", [_vm._v(\"boolean\")]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"validation-rule-context-object\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#validation-rule-context-object\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Validation Rule Context Object:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"Property\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Description\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"value\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"The value of the field\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"getFormValues\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\"When the input is in the context of a \"),\n              _c(\"code\", [_vm._v(\"FormulateForm\")]),\n              _vm._v(\n                \" you can retrieve an object of form values by using this function\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"name\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"The name of the field being evaluated\")])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"In addition to the context object, any rule arguments are passed as additional\\narguments. For example:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _vm._v(\"// Given this validation string\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"myRule:first,second,third\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                '// A rule named \"myRule\" will be called with the following:'\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"myRule\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _vm._v(\"context\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"...\")\n              ]),\n              _vm._v(\"args\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"// args now contains an array ['first', 'second', 'third']\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h3\", { attrs: { id: \"field-level-custom-validation-rules\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#field-level-custom-validation-rules\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Field-level custom validation rules\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"FormulateInput\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"validation\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"required|foobar\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":validation-rules\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\n                  \"{\\n    foobar: ({ value }) => ['foo', 'bar'].includes(value)\\n  }\"\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\":validation-messages\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"{\\n    foobar: 'The value must be foo or bar'\\n  }\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-custom-validation\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"custom-block tip\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [\n          _vm._v(\"Asynchronous validation\")\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"p\",\n          [\n            _vm._v(\"Asynchronous validation rules are completely valid, but \"),\n            _c(\n              \"RouterLink\",\n              { attrs: { to: \"/guide/forms/#submitting-forms\" } },\n              [_vm._v(\"keep in mind\")]\n            ),\n            _vm._v(\"\\nthat forms will wait to trigger their \"),\n            _c(\"code\", [_vm._v(\"@submit\")]),\n            _vm._v(\" handler until all validation\\nrules have resolved \"),\n            _c(\"code\", [_vm._v(\"true\")]),\n            _vm._v(\", so try to keep them as snappy as possible.\")\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"Internally, Vue Formulate does not debounce validation rules, so if you need to\\nperform an expensive asynchronous validation (like an http request) it is\\nrecommended that you debounce your validation rule.\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"global-custom-validation-rules\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#global-custom-validation-rules\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Global custom validation rules\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Global validation rules can be added when Vue Formulate is registered with Vue.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"import\")\n            ]),\n            _vm._v(\" Vue \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"from\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'vue'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"import\")\n            ]),\n            _vm._v(\" VueFormulate \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"from\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'@braid/vue-formulate'\")\n            ]),\n            _vm._v(\"\\n\\nVue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"use\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"VueFormulate\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  rules\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\n              \"span\",\n              {\n                pre: true,\n                attrs: { class: \"token function-variable function\" }\n              },\n              [_vm._v(\"foobar\")]\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\" value \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=>\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'foo'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'bar'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"includes\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"value\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"74ce7a4e-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./docs/guide/validation.md?vue&type=template&id=4575657b&\n");

/***/ })

}]);